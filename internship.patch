diff --git a/client.py b/client.py
index 40badcd..b84218f 100644
--- a/client.py
+++ b/client.py
@@ -35,14 +35,15 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price) / 2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+
+	return price_a / price_b
 
 # Main
 if __name__ == "__main__":
@@ -56,4 +57,8 @@ if __name__ == "__main__":
 			stock, bid_price, ask_price, price = getDataPoint(quote)
 			print "Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price)
 
-		print "Ratio %s" % getRatio(price, price)
+			if stock == 'ABC':
+				first_price = price
+			else:
+				second_price = price
+		print "Ratio %s" % getRatio(first_price, second_price)
diff --git a/client_test.py b/client_test.py
index a608a01..a959161 100644
--- a/client_test.py
+++ b/client_test.py
@@ -8,6 +8,10 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    stock_one_price = (quotes[0]['top_ask']['price'] + quotes[0]['top_bid']['price']) / 2
+    stock_second_price = (quotes[1]['top_ask']['price'] + quotes[1]['top_bid']['price']) / 2
+    # print stock_one_price
+    # print stock_second_price
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,11 +19,46 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    # Same as above as the price of the stock is the average
 
+    stock_one_price = (quotes[0]['top_ask']['price'] + quotes[0]['top_bid']['price']) / 2
+    stock_second_price = (quotes[1]['top_ask']['price'] + quotes[1]['top_bid']['price']) / 2
+    # print stock_one_price
+    # print stock_second_price
 
   """ ------------ Add more unit tests ------------ """
 
+  def test_getRatio_calculateRatio(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+       'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+       'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    stock_one_price = (quotes[0]['top_ask']['price'] + quotes[0]['top_bid']['price']) / 2
+    stock_second_price = (quotes[1]['top_ask']['price'] + quotes[1]['top_bid']['price']) / 2
+    ratio = stock_one_price/stock_second_price
+    # print ratio
+
+  def test_getRatio_SecondStockZero(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453',
+       'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 0, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453',
+       'top_bid': {'price': 0, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    stock_one_price = (quotes[0]['top_ask']['price'] + quotes[0]['top_bid']['price']) / 2
+    # print stock_one_price
+    stock_second_price = (quotes[1]['top_ask']['price'] + quotes[1]['top_bid']['price']) / 2
+    # print stock_second_price
+    if stock_one_price or stock_second_price == 0:
+      print("Error: One stock is priced at 0")
+    else:
+      ratio = stock_one_price / stock_second_price
+      # print ratio
 
 
 if __name__ == '__main__':
     unittest.main()
+
